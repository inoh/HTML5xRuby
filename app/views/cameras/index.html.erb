<section>
  <h2>image/*;capture=camera</h2>
  <input type="file" accept="image/*;capture=camera">
</section>
<hr>
<section>
  <h2>video/*;capture=camcorder</h2>
  <input type="file" accept="video/*;capture=camcorder">
</section>
<hr>
<section>
  <h2>audio/*;capture=microphone</h2>
  <input type="file" accept="audio/*;capture=microphone">
</section>
<hr>
<section>
  <h2>WebRTC</h2>
  <video autoplay></video>
  <img src="">
  <canvas style="display:none;"></canvas>
  <script>
  /*
  var video = document.querySelector('video');
  var canvas = document.querySelector('canvas');
  var ctx = canvas.getContext('2d');
  var localMediaStream = null;

  function hasGetUserMedia() {
    // Note: Opera is unprefixed.
    return !!(navigator.getUserMedia || navigator.webkitGetUserMedia ||
              navigator.mozGetUserMedia || navigator.msGetUserMedia);
  }

  if (hasGetUserMedia()) {
    // Good to go!
  } else {
    alert('getUserMedia() is not supported in your browser');
  }
  var onFailSoHard = function(e) {
    console.log('Reeeejected!', e);
  };

  function snapshot() {
    if (localMediaStream) {
      ctx.drawImage(video, 0, 0);
      // "image/webp" works in Chrome 18. In other browsers, this will fall back to image/png.
      document.querySelector('img').src = canvas.toDataURL('image/webp');
    }
  }

  video.addEventListener('click', snapshot, false);

  // Not showing vendor prefixes or code that works cross-browser.
  navigator.getUserMedia({video: true}, function(stream) {
    video.src = window.URL.createObjectURL(stream);
    localMediaStream = stream;
  }, onFailSoHard);
*/
  </script>
</section>